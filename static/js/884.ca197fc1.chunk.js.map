{"version":3,"file":"static/js/884.ca197fc1.chunk.js","mappings":"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","sources":["components/Loader/toastConfig.js","pages/MovieDetails.jsx","services/api/api.js","webpack://react-homework-template/./src/pages/Pages.module.css?6bb4"],"sourcesContent":["export const toastConfig = {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  };","import React, { useEffect, useState, useRef, Suspense, lazy } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Routes, Route, NavLink, useParams } from 'react-router-dom';\nimport { toastConfig } from '../components/Loader/toastConfig';\nimport { toast } from 'react-toastify';\nimport { Dna } from 'react-loader-spinner';\n\nimport { fetchMovieDetails } from '../services/api/api';\nimport placeholder from '../images/cinema.png';\n\nimport styles from './Pages.module.css';\n\nconst MovieReviews = lazy(() => import('../pages/MovieReviews'));\nconst MovieCast = lazy(() => import('../pages/MovieCast'));\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetailsData = async () => {\n      try {\n        const movieData = await fetchMovieDetails(movieId);\n\n        setMovieDetails(movieData);\n      } catch (error) {\n        setError(error.message);\n        toast.error(error.message, toastConfig);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetailsData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {error !== null && (\n        <p>\n          Oops, some error occurred! Please, try again later. Error: {error}\n        </p>\n      )}\n      {isLoading && (\n        <Dna\n          visible={true}\n          height={80}\n          width={80}\n          ariaLabel=\"dna-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"dna-wrapper\"\n        />\n      )}\n\n      <div>\n        <Link to={backLinkHref.current} className={styles.formWrap}>\n          {' '}\n          &#8592; Back to movies\n        </Link>\n        {movieDetails !== null && (\n          <div>\n            <div className={styles.MovieDetailsBox}>\n              <div className={styles.MovieDetailsImg}>\n                <img\n                  src={movieDetails.poster_path ? `https://image.tmdb.org/t/p/w200/${movieDetails.poster_path}` : placeholder}\n                  alt={movieDetails.title}\n                  max-width=\"400\"\n                />\n              </div>\n\n              <div>\n                <h2>\n                  Title: {movieDetails.title} (\n                  {movieDetails.first_air_date\n                    ? movieDetails.first_air_date\n                    : movieDetails.release_date}\n                  )\n                </h2>\n                <p>User score: {movieDetails.vote_average} </p>\n                <h3>Overview: {movieDetails.overview} </h3>\n                <p></p>\n                <h3>Genres</h3>\n                <p>\n                  {movieDetails.genres && movieDetails.genres.length > 0\n                    ? movieDetails.genres.map(genre => genre.name).join(', ')\n                    : ''}\n                </p>\n              </div>\n            </div>\n\n            <div className={styles.addInfBox}>\n              <h2>Additional information</h2>\n              <div className={styles.buttonBox}>\n                <NavLink to=\"reviews\">Reviews</NavLink>\n                <NavLink to=\"cast\">Cast</NavLink>\n              </div>\n            </div>\n          </div>\n        )}\n         <Suspense>\n        <Routes >\n          <Route path=\"reviews\" element={<MovieReviews />} />\n          <Route path=\"cast\" element={<MovieCast />} />\n        </Routes>\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '37244e55abf3f6dfeaa909abea58e77f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst params = {\n  api_key: API_KEY,\n};\n\nexport async function fetchMoviesNet() {\n  try {\n    const response = await axios.get('trending/all/day', { params });\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}`, { params });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, { params });\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, { params });\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchSearchedMovie(query) {\n  const params = {\n    api_key: API_KEY,\n    query: query,\n  };\n\n  try {\n    const response = await axios.get('search/movie?', { params });\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"MovieDetailsBox\":\"Pages_MovieDetailsBox__Fbcl0\",\"MovieDetailsImg\":\"Pages_MovieDetailsImg__kf-WO\",\"addInfBox\":\"Pages_addInfBox__-BKtL\",\"buttonBox\":\"Pages_buttonBox__2ISTv\",\"formWrap\":\"Pages_formWrap__Wpc8Q\",\"searchBtn\":\"Pages_searchBtn__dxFm1\",\"searchBox\":\"Pages_searchBox__WDKV1\",\"MovieReviewsBox\":\"Pages_MovieReviewsBox__AyV32\",\"castList\":\"Pages_castList__QORHq\"};"],"names":["toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","MovieReviews","lazy","MovieCast","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","error","setError","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchMovieDetailsData","fetchMovieDetails","movieData","message","toast","visible","height","width","ariaLabel","wrapperStyle","wrapperClassName","to","current","className","styles","src","poster_path","placeholder","alt","title","first_air_date","release_date","vote_average","overview","genres","length","map","genre","name","join","Suspense","path","element","API_KEY","axios","params","api_key","fetchMoviesNet","response","data","results","fetchMovieCast","cast","fetchMovieReviews","fetchSearchedMovie","query"],"sourceRoot":""}