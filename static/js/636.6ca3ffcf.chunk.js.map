{"version":3,"file":"static/js/636.6ca3ffcf.chunk.js","mappings":"qTAqFA,EAzEkB,WAChB,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OArBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAgB,mCAAG,8GAEKC,EAAAA,EAAAA,IAAeJ,GAFpB,OAEfK,EAFe,OAIrBC,QAAQC,IAAIF,GAEZV,EAAaU,GANQ,gDAQrBN,EAAS,KAAMS,SACfC,EAAAA,GAAAA,MAAY,KAAMD,QAASE,EAAAA,GATN,yBAWrBb,GAAa,GAXQ,4EAAH,qDAetBM,GAjBoB,CAkBrB,GAAE,CAACH,KAGF,2BACa,OAAVF,IACC,yBAAG,8DAC2DA,KAG/DF,IACC,SAAC,KAAD,CACEe,SAAS,EACTC,OAAQ,GACRC,MAAO,GACPC,UAAU,cACVC,aAAc,CAAC,EACfC,iBAAiB,iBAIrB,iBAAKC,UAAWC,EAAAA,EAAAA,gBAAhB,WACE,wBAAI,UACM,OAATxB,QAAS,IAATA,OAAA,EAAAA,EAAWyB,QAAS,GACnB,wBACGzB,EAAU0B,KAAI,SAAAC,GAAI,OACjB,2BACE,gBACEC,IACED,EAAKE,aAAL,0CACuCF,EAAKE,c,q7NAG9CC,IAAK9B,EAAU+B,KACfZ,MAAM,SAER,wBAAKQ,EAAKI,QACV,uBAAIJ,EAAKK,cAXFL,EAAKM,GADG,OAiBrB,uBAAG,oDAKZ,C","sources":["pages/MovieCast.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { toastConfig } from '../components/Loader/toastConfig';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api/api';\nimport { Dna } from 'react-loader-spinner';\n\nimport profile from '../images/profile.png';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './Pages.module.css';\n\nconst MovieCast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchReviewsData = async () => {\n      try {\n        const castDetails = await fetchMovieCast(movieId);\n\n        console.log(castDetails);\n\n        setMovieCast(castDetails);\n      } catch (error) {\n        setError(error.message);\n        toast.error(error.message, toastConfig);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReviewsData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {error !== null && (\n        <p>\n          Oops, some error occurred! Please, try again later. Error: {error}\n        </p>\n      )}\n      {isLoading && (\n        <Dna\n          visible={true}\n          height={80}\n          width={80}\n          ariaLabel=\"dna-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"dna-wrapper\"\n        />\n      )}\n\n      <div className={styles.MovieDetailsBox}>\n        <h3>Cast</h3>\n        {movieCast?.length > 0 ? (\n          <ul>\n            {movieCast.map(cast => (\n              <li key={cast.id}>\n                <img\n                  src={\n                    cast.profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${cast.profile_path}`\n                      : profile\n                  }\n                  alt={movieCast.name}\n                  width=\"400\"\n                />\n                <h2>{cast.name}</h2>\n                <p>{cast.character}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We do not have any reviews for this Movie.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCast;\n"],"names":["useState","movieCast","setMovieCast","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchReviewsData","fetchMovieCast","castDetails","console","log","message","toast","toastConfig","visible","height","width","ariaLabel","wrapperStyle","wrapperClassName","className","styles","length","map","cast","src","profile_path","alt","name","character","id"],"sourceRoot":""}